/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SwitchToFrameRequest struct for SwitchToFrameRequest
type SwitchToFrameRequest struct {
	Id NilableFrameId `json:"id,omitempty"`
}

// NewSwitchToFrameRequest instantiates a new SwitchToFrameRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSwitchToFrameRequest() *SwitchToFrameRequest {
	this := SwitchToFrameRequest{}
	return &this
}

// NewSwitchToFrameRequestWithDefaults instantiates a new SwitchToFrameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSwitchToFrameRequestWithDefaults() *SwitchToFrameRequest {
	this := SwitchToFrameRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SwitchToFrameRequest) GetId() FrameId {
	if o == nil || o.Id.Get() == nil {
		var ret FrameId
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SwitchToFrameRequest) GetIdOk() (*FrameId, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SwitchToFrameRequest) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NilableFrameId and assigns it to the Id field.
func (o *SwitchToFrameRequest) SetId(v FrameId) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SwitchToFrameRequest) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SwitchToFrameRequest) UnsetId() {
	o.Id.Unset()
}

func (o SwitchToFrameRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	return json.Marshal(toSerialize)
}

type NilableSwitchToFrameRequest struct {
	value *SwitchToFrameRequest
	isSet bool
}

func (v NilableSwitchToFrameRequest) Get() *SwitchToFrameRequest {
	return v.value
}

func (v *NilableSwitchToFrameRequest) Set(val *SwitchToFrameRequest) {
	v.value = val
	v.isSet = true
}

func (v NilableSwitchToFrameRequest) IsSet() bool {
	return v.isSet
}

func (v *NilableSwitchToFrameRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableSwitchToFrameRequest(val *SwitchToFrameRequest) *NilableSwitchToFrameRequest {
	return &NilableSwitchToFrameRequest{value: val, isSet: true}
}

func (v NilableSwitchToFrameRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableSwitchToFrameRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


