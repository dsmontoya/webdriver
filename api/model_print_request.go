/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PrintRequest struct for PrintRequest
type PrintRequest struct {
	Options PrintRequestOptions `json:"options"`
}

// NewPrintRequest instantiates a new PrintRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrintRequest(options PrintRequestOptions) *PrintRequest {
	this := PrintRequest{}
	this.Options = options
	return &this
}

// NewPrintRequestWithDefaults instantiates a new PrintRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrintRequestWithDefaults() *PrintRequest {
	this := PrintRequest{}
	return &this
}

// GetOptions returns the Options field value
func (o *PrintRequest) GetOptions() PrintRequestOptions {
	if o == nil {
		var ret PrintRequestOptions
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *PrintRequest) GetOptionsOk() (*PrintRequestOptions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Options, true
}

// SetOptions sets field value
func (o *PrintRequest) SetOptions(v PrintRequestOptions) {
	o.Options = v
}

func (o PrintRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NilablePrintRequest struct {
	value *PrintRequest
	isSet bool
}

func (v NilablePrintRequest) Get() *PrintRequest {
	return v.value
}

func (v *NilablePrintRequest) Set(val *PrintRequest) {
	v.value = val
	v.isSet = true
}

func (v NilablePrintRequest) IsSet() bool {
	return v.isSet
}

func (v *NilablePrintRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilablePrintRequest(val *PrintRequest) *NilablePrintRequest {
	return &NilablePrintRequest{value: val, isSet: true}
}

func (v NilablePrintRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilablePrintRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


