/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ScriptRequest struct for ScriptRequest
type ScriptRequest struct {
	Script *string `json:"script,omitempty"`
	Args []interface{} `json:"args,omitempty"`
}

// NewScriptRequest instantiates a new ScriptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScriptRequest() *ScriptRequest {
	this := ScriptRequest{}
	return &this
}

// NewScriptRequestWithDefaults instantiates a new ScriptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScriptRequestWithDefaults() *ScriptRequest {
	this := ScriptRequest{}
	return &this
}

// GetScript returns the Script field value if set, zero value otherwise.
func (o *ScriptRequest) GetScript() string {
	if o == nil || o.Script == nil {
		var ret string
		return ret
	}
	return *o.Script
}

// GetScriptOk returns a tuple with the Script field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptRequest) GetScriptOk() (*string, bool) {
	if o == nil || o.Script == nil {
		return nil, false
	}
	return o.Script, true
}

// HasScript returns a boolean if a field has been set.
func (o *ScriptRequest) HasScript() bool {
	if o != nil && o.Script != nil {
		return true
	}

	return false
}

// SetScript gets a reference to the given string and assigns it to the Script field.
func (o *ScriptRequest) SetScript(v string) {
	o.Script = &v
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *ScriptRequest) GetArgs() []interface{} {
	if o == nil || o.Args == nil {
		var ret []interface{}
		return ret
	}
	return o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScriptRequest) GetArgsOk() ([]interface{}, bool) {
	if o == nil || o.Args == nil {
		return nil, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *ScriptRequest) HasArgs() bool {
	if o != nil && o.Args != nil {
		return true
	}

	return false
}

// SetArgs gets a reference to the given []interface{} and assigns it to the Args field.
func (o *ScriptRequest) SetArgs(v []interface{}) {
	o.Args = v
}

func (o ScriptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Script != nil {
		toSerialize["script"] = o.Script
	}
	if o.Args != nil {
		toSerialize["args"] = o.Args
	}
	return json.Marshal(toSerialize)
}

type NilableScriptRequest struct {
	value *ScriptRequest
	isSet bool
}

func (v NilableScriptRequest) Get() *ScriptRequest {
	return v.value
}

func (v *NilableScriptRequest) Set(val *ScriptRequest) {
	v.value = val
	v.isSet = true
}

func (v NilableScriptRequest) IsSet() bool {
	return v.isSet
}

func (v *NilableScriptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableScriptRequest(val *ScriptRequest) *NilableScriptRequest {
	return &NilableScriptRequest{value: val, isSet: true}
}

func (v NilableScriptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableScriptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


