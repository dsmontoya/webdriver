/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// NewWindowResponse struct for NewWindowResponse
type NewWindowResponse struct {
	Value NewWindowResponseValue `json:"value"`
}

// NewNewWindowResponse instantiates a new NewWindowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewWindowResponse(value NewWindowResponseValue) *NewWindowResponse {
	this := NewWindowResponse{}
	this.Value = value
	return &this
}

// NewNewWindowResponseWithDefaults instantiates a new NewWindowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewWindowResponseWithDefaults() *NewWindowResponse {
	this := NewWindowResponse{}
	return &this
}

// GetValue returns the Value field value
func (o *NewWindowResponse) GetValue() NewWindowResponseValue {
	if o == nil {
		var ret NewWindowResponseValue
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *NewWindowResponse) GetValueOk() (*NewWindowResponseValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *NewWindowResponse) SetValue(v NewWindowResponseValue) {
	o.Value = v
}

func (o NewWindowResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NilableNewWindowResponse struct {
	value *NewWindowResponse
	isSet bool
}

func (v NilableNewWindowResponse) Get() *NewWindowResponse {
	return v.value
}

func (v *NilableNewWindowResponse) Set(val *NewWindowResponse) {
	v.value = val
	v.isSet = true
}

func (v NilableNewWindowResponse) IsSet() bool {
	return v.isSet
}

func (v *NilableNewWindowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableNewWindowResponse(val *NewWindowResponse) *NilableNewWindowResponse {
	return &NilableNewWindowResponse{value: val, isSet: true}
}

func (v NilableNewWindowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableNewWindowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


