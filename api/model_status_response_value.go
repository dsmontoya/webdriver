/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// StatusResponseValue struct for StatusResponseValue
type StatusResponseValue struct {
	Ready bool `json:"ready"`
	Message string `json:"message"`
}

// NewStatusResponseValue instantiates a new StatusResponseValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusResponseValue(ready bool, message string) *StatusResponseValue {
	this := StatusResponseValue{}
	this.Ready = ready
	this.Message = message
	return &this
}

// NewStatusResponseValueWithDefaults instantiates a new StatusResponseValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusResponseValueWithDefaults() *StatusResponseValue {
	this := StatusResponseValue{}
	return &this
}

// GetReady returns the Ready field value
func (o *StatusResponseValue) GetReady() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Ready
}

// GetReadyOk returns a tuple with the Ready field value
// and a boolean to check if the value has been set.
func (o *StatusResponseValue) GetReadyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ready, true
}

// SetReady sets field value
func (o *StatusResponseValue) SetReady(v bool) {
	o.Ready = v
}

// GetMessage returns the Message field value
func (o *StatusResponseValue) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *StatusResponseValue) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *StatusResponseValue) SetMessage(v string) {
	o.Message = v
}

func (o StatusResponseValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ready"] = o.Ready
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NilableStatusResponseValue struct {
	value *StatusResponseValue
	isSet bool
}

func (v NilableStatusResponseValue) Get() *StatusResponseValue {
	return v.value
}

func (v *NilableStatusResponseValue) Set(val *StatusResponseValue) {
	v.value = val
	v.isSet = true
}

func (v NilableStatusResponseValue) IsSet() bool {
	return v.isSet
}

func (v *NilableStatusResponseValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableStatusResponseValue(val *StatusResponseValue) *NilableStatusResponseValue {
	return &NilableStatusResponseValue{value: val, isSet: true}
}

func (v NilableStatusResponseValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableStatusResponseValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


