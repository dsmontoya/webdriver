/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// FirefoxOptions struct for FirefoxOptions
type FirefoxOptions struct {
	AndroidPackage *string `json:"androidPackage,omitempty"`
	AndroidActivity *string `json:"androidActivity,omitempty"`
	AndroidDeviceSerial *string `json:"androidDeviceSerial,omitempty"`
	AndroidIntentArguments []string `json:"androidIntentArguments,omitempty"`
	Args []string `json:"args,omitempty"`
	Binary *string `json:"binary,omitempty"`
	Env *map[string]string `json:"env,omitempty"`
	Log *FirefoxOptionsLog `json:"log,omitempty"`
	Prefs *map[string]PreferenceValue `json:"prefs,omitempty"`
	Profile *string `json:"profile,omitempty"`
}

// NewFirefoxOptions instantiates a new FirefoxOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirefoxOptions() *FirefoxOptions {
	this := FirefoxOptions{}
	return &this
}

// NewFirefoxOptionsWithDefaults instantiates a new FirefoxOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirefoxOptionsWithDefaults() *FirefoxOptions {
	this := FirefoxOptions{}
	return &this
}

// GetAndroidPackage returns the AndroidPackage field value if set, zero value otherwise.
func (o *FirefoxOptions) GetAndroidPackage() string {
	if o == nil || o.AndroidPackage == nil {
		var ret string
		return ret
	}
	return *o.AndroidPackage
}

// GetAndroidPackageOk returns a tuple with the AndroidPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirefoxOptions) GetAndroidPackageOk() (*string, bool) {
	if o == nil || o.AndroidPackage == nil {
		return nil, false
	}
	return o.AndroidPackage, true
}

// HasAndroidPackage returns a boolean if a field has been set.
func (o *FirefoxOptions) HasAndroidPackage() bool {
	if o != nil && o.AndroidPackage != nil {
		return true
	}

	return false
}

// SetAndroidPackage gets a reference to the given string and assigns it to the AndroidPackage field.
func (o *FirefoxOptions) SetAndroidPackage(v string) {
	o.AndroidPackage = &v
}

// GetAndroidActivity returns the AndroidActivity field value if set, zero value otherwise.
func (o *FirefoxOptions) GetAndroidActivity() string {
	if o == nil || o.AndroidActivity == nil {
		var ret string
		return ret
	}
	return *o.AndroidActivity
}

// GetAndroidActivityOk returns a tuple with the AndroidActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirefoxOptions) GetAndroidActivityOk() (*string, bool) {
	if o == nil || o.AndroidActivity == nil {
		return nil, false
	}
	return o.AndroidActivity, true
}

// HasAndroidActivity returns a boolean if a field has been set.
func (o *FirefoxOptions) HasAndroidActivity() bool {
	if o != nil && o.AndroidActivity != nil {
		return true
	}

	return false
}

// SetAndroidActivity gets a reference to the given string and assigns it to the AndroidActivity field.
func (o *FirefoxOptions) SetAndroidActivity(v string) {
	o.AndroidActivity = &v
}

// GetAndroidDeviceSerial returns the AndroidDeviceSerial field value if set, zero value otherwise.
func (o *FirefoxOptions) GetAndroidDeviceSerial() string {
	if o == nil || o.AndroidDeviceSerial == nil {
		var ret string
		return ret
	}
	return *o.AndroidDeviceSerial
}

// GetAndroidDeviceSerialOk returns a tuple with the AndroidDeviceSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirefoxOptions) GetAndroidDeviceSerialOk() (*string, bool) {
	if o == nil || o.AndroidDeviceSerial == nil {
		return nil, false
	}
	return o.AndroidDeviceSerial, true
}

// HasAndroidDeviceSerial returns a boolean if a field has been set.
func (o *FirefoxOptions) HasAndroidDeviceSerial() bool {
	if o != nil && o.AndroidDeviceSerial != nil {
		return true
	}

	return false
}

// SetAndroidDeviceSerial gets a reference to the given string and assigns it to the AndroidDeviceSerial field.
func (o *FirefoxOptions) SetAndroidDeviceSerial(v string) {
	o.AndroidDeviceSerial = &v
}

// GetAndroidIntentArguments returns the AndroidIntentArguments field value if set, zero value otherwise.
func (o *FirefoxOptions) GetAndroidIntentArguments() []string {
	if o == nil || o.AndroidIntentArguments == nil {
		var ret []string
		return ret
	}
	return o.AndroidIntentArguments
}

// GetAndroidIntentArgumentsOk returns a tuple with the AndroidIntentArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirefoxOptions) GetAndroidIntentArgumentsOk() ([]string, bool) {
	if o == nil || o.AndroidIntentArguments == nil {
		return nil, false
	}
	return o.AndroidIntentArguments, true
}

// HasAndroidIntentArguments returns a boolean if a field has been set.
func (o *FirefoxOptions) HasAndroidIntentArguments() bool {
	if o != nil && o.AndroidIntentArguments != nil {
		return true
	}

	return false
}

// SetAndroidIntentArguments gets a reference to the given []string and assigns it to the AndroidIntentArguments field.
func (o *FirefoxOptions) SetAndroidIntentArguments(v []string) {
	o.AndroidIntentArguments = v
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *FirefoxOptions) GetArgs() []string {
	if o == nil || o.Args == nil {
		var ret []string
		return ret
	}
	return o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirefoxOptions) GetArgsOk() ([]string, bool) {
	if o == nil || o.Args == nil {
		return nil, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *FirefoxOptions) HasArgs() bool {
	if o != nil && o.Args != nil {
		return true
	}

	return false
}

// SetArgs gets a reference to the given []string and assigns it to the Args field.
func (o *FirefoxOptions) SetArgs(v []string) {
	o.Args = v
}

// GetBinary returns the Binary field value if set, zero value otherwise.
func (o *FirefoxOptions) GetBinary() string {
	if o == nil || o.Binary == nil {
		var ret string
		return ret
	}
	return *o.Binary
}

// GetBinaryOk returns a tuple with the Binary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirefoxOptions) GetBinaryOk() (*string, bool) {
	if o == nil || o.Binary == nil {
		return nil, false
	}
	return o.Binary, true
}

// HasBinary returns a boolean if a field has been set.
func (o *FirefoxOptions) HasBinary() bool {
	if o != nil && o.Binary != nil {
		return true
	}

	return false
}

// SetBinary gets a reference to the given string and assigns it to the Binary field.
func (o *FirefoxOptions) SetBinary(v string) {
	o.Binary = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *FirefoxOptions) GetEnv() map[string]string {
	if o == nil || o.Env == nil {
		var ret map[string]string
		return ret
	}
	return *o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirefoxOptions) GetEnvOk() (*map[string]string, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *FirefoxOptions) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given map[string]string and assigns it to the Env field.
func (o *FirefoxOptions) SetEnv(v map[string]string) {
	o.Env = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *FirefoxOptions) GetLog() FirefoxOptionsLog {
	if o == nil || o.Log == nil {
		var ret FirefoxOptionsLog
		return ret
	}
	return *o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirefoxOptions) GetLogOk() (*FirefoxOptionsLog, bool) {
	if o == nil || o.Log == nil {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *FirefoxOptions) HasLog() bool {
	if o != nil && o.Log != nil {
		return true
	}

	return false
}

// SetLog gets a reference to the given FirefoxOptionsLog and assigns it to the Log field.
func (o *FirefoxOptions) SetLog(v FirefoxOptionsLog) {
	o.Log = &v
}

// GetPrefs returns the Prefs field value if set, zero value otherwise.
func (o *FirefoxOptions) GetPrefs() map[string]PreferenceValue {
	if o == nil || o.Prefs == nil {
		var ret map[string]PreferenceValue
		return ret
	}
	return *o.Prefs
}

// GetPrefsOk returns a tuple with the Prefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirefoxOptions) GetPrefsOk() (*map[string]PreferenceValue, bool) {
	if o == nil || o.Prefs == nil {
		return nil, false
	}
	return o.Prefs, true
}

// HasPrefs returns a boolean if a field has been set.
func (o *FirefoxOptions) HasPrefs() bool {
	if o != nil && o.Prefs != nil {
		return true
	}

	return false
}

// SetPrefs gets a reference to the given map[string]PreferenceValue and assigns it to the Prefs field.
func (o *FirefoxOptions) SetPrefs(v map[string]PreferenceValue) {
	o.Prefs = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *FirefoxOptions) GetProfile() string {
	if o == nil || o.Profile == nil {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirefoxOptions) GetProfileOk() (*string, bool) {
	if o == nil || o.Profile == nil {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *FirefoxOptions) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *FirefoxOptions) SetProfile(v string) {
	o.Profile = &v
}

func (o FirefoxOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AndroidPackage != nil {
		toSerialize["androidPackage"] = o.AndroidPackage
	}
	if o.AndroidActivity != nil {
		toSerialize["androidActivity"] = o.AndroidActivity
	}
	if o.AndroidDeviceSerial != nil {
		toSerialize["androidDeviceSerial"] = o.AndroidDeviceSerial
	}
	if o.AndroidIntentArguments != nil {
		toSerialize["androidIntentArguments"] = o.AndroidIntentArguments
	}
	if o.Args != nil {
		toSerialize["args"] = o.Args
	}
	if o.Binary != nil {
		toSerialize["binary"] = o.Binary
	}
	if o.Env != nil {
		toSerialize["env"] = o.Env
	}
	if o.Log != nil {
		toSerialize["log"] = o.Log
	}
	if o.Prefs != nil {
		toSerialize["prefs"] = o.Prefs
	}
	if o.Profile != nil {
		toSerialize["profile"] = o.Profile
	}
	return json.Marshal(toSerialize)
}

type NilableFirefoxOptions struct {
	value *FirefoxOptions
	isSet bool
}

func (v NilableFirefoxOptions) Get() *FirefoxOptions {
	return v.value
}

func (v *NilableFirefoxOptions) Set(val *FirefoxOptions) {
	v.value = val
	v.isSet = true
}

func (v NilableFirefoxOptions) IsSet() bool {
	return v.isSet
}

func (v *NilableFirefoxOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableFirefoxOptions(val *FirefoxOptions) *NilableFirefoxOptions {
	return &NilableFirefoxOptions{value: val, isSet: true}
}

func (v NilableFirefoxOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableFirefoxOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


