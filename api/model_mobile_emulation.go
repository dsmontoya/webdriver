/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// MobileEmulation struct for MobileEmulation
type MobileEmulation struct {
	DeviceName *string `json:"deviceName,omitempty"`
	DeviceMetrics *MobileEmulationDeviceMetrics `json:"deviceMetrics,omitempty"`
	UserAgent *string `json:"userAgent,omitempty"`
}

// NewMobileEmulation instantiates a new MobileEmulation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileEmulation() *MobileEmulation {
	this := MobileEmulation{}
	return &this
}

// NewMobileEmulationWithDefaults instantiates a new MobileEmulation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileEmulationWithDefaults() *MobileEmulation {
	this := MobileEmulation{}
	return &this
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *MobileEmulation) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileEmulation) GetDeviceNameOk() (*string, bool) {
	if o == nil || o.DeviceName == nil {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *MobileEmulation) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *MobileEmulation) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetDeviceMetrics returns the DeviceMetrics field value if set, zero value otherwise.
func (o *MobileEmulation) GetDeviceMetrics() MobileEmulationDeviceMetrics {
	if o == nil || o.DeviceMetrics == nil {
		var ret MobileEmulationDeviceMetrics
		return ret
	}
	return *o.DeviceMetrics
}

// GetDeviceMetricsOk returns a tuple with the DeviceMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileEmulation) GetDeviceMetricsOk() (*MobileEmulationDeviceMetrics, bool) {
	if o == nil || o.DeviceMetrics == nil {
		return nil, false
	}
	return o.DeviceMetrics, true
}

// HasDeviceMetrics returns a boolean if a field has been set.
func (o *MobileEmulation) HasDeviceMetrics() bool {
	if o != nil && o.DeviceMetrics != nil {
		return true
	}

	return false
}

// SetDeviceMetrics gets a reference to the given MobileEmulationDeviceMetrics and assigns it to the DeviceMetrics field.
func (o *MobileEmulation) SetDeviceMetrics(v MobileEmulationDeviceMetrics) {
	o.DeviceMetrics = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *MobileEmulation) GetUserAgent() string {
	if o == nil || o.UserAgent == nil {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MobileEmulation) GetUserAgentOk() (*string, bool) {
	if o == nil || o.UserAgent == nil {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *MobileEmulation) HasUserAgent() bool {
	if o != nil && o.UserAgent != nil {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *MobileEmulation) SetUserAgent(v string) {
	o.UserAgent = &v
}

func (o MobileEmulation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceName != nil {
		toSerialize["deviceName"] = o.DeviceName
	}
	if o.DeviceMetrics != nil {
		toSerialize["deviceMetrics"] = o.DeviceMetrics
	}
	if o.UserAgent != nil {
		toSerialize["userAgent"] = o.UserAgent
	}
	return json.Marshal(toSerialize)
}

type NilableMobileEmulation struct {
	value *MobileEmulation
	isSet bool
}

func (v NilableMobileEmulation) Get() *MobileEmulation {
	return v.value
}

func (v *NilableMobileEmulation) Set(val *MobileEmulation) {
	v.value = val
	v.isSet = true
}

func (v NilableMobileEmulation) IsSet() bool {
	return v.isSet
}

func (v *NilableMobileEmulation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableMobileEmulation(val *MobileEmulation) *NilableMobileEmulation {
	return &NilableMobileEmulation{value: val, isSet: true}
}

func (v NilableMobileEmulation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableMobileEmulation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


