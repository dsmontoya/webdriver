/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ActionSequenceParameters struct for ActionSequenceParameters
type ActionSequenceParameters struct {
	PointerType *string `json:"pointerType,omitempty"`
}

// NewActionSequenceParameters instantiates a new ActionSequenceParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionSequenceParameters() *ActionSequenceParameters {
	this := ActionSequenceParameters{}
	var pointerType string = "mouse"
	this.PointerType = &pointerType
	return &this
}

// NewActionSequenceParametersWithDefaults instantiates a new ActionSequenceParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionSequenceParametersWithDefaults() *ActionSequenceParameters {
	this := ActionSequenceParameters{}
	var pointerType string = "mouse"
	this.PointerType = &pointerType
	return &this
}

// GetPointerType returns the PointerType field value if set, zero value otherwise.
func (o *ActionSequenceParameters) GetPointerType() string {
	if o == nil || o.PointerType == nil {
		var ret string
		return ret
	}
	return *o.PointerType
}

// GetPointerTypeOk returns a tuple with the PointerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionSequenceParameters) GetPointerTypeOk() (*string, bool) {
	if o == nil || o.PointerType == nil {
		return nil, false
	}
	return o.PointerType, true
}

// HasPointerType returns a boolean if a field has been set.
func (o *ActionSequenceParameters) HasPointerType() bool {
	if o != nil && o.PointerType != nil {
		return true
	}

	return false
}

// SetPointerType gets a reference to the given string and assigns it to the PointerType field.
func (o *ActionSequenceParameters) SetPointerType(v string) {
	o.PointerType = &v
}

func (o ActionSequenceParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PointerType != nil {
		toSerialize["pointerType"] = o.PointerType
	}
	return json.Marshal(toSerialize)
}

type NilableActionSequenceParameters struct {
	value *ActionSequenceParameters
	isSet bool
}

func (v NilableActionSequenceParameters) Get() *ActionSequenceParameters {
	return v.value
}

func (v *NilableActionSequenceParameters) Set(val *ActionSequenceParameters) {
	v.value = val
	v.isSet = true
}

func (v NilableActionSequenceParameters) IsSet() bool {
	return v.isSet
}

func (v *NilableActionSequenceParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableActionSequenceParameters(val *ActionSequenceParameters) *NilableActionSequenceParameters {
	return &NilableActionSequenceParameters{value: val, isSet: true}
}

func (v NilableActionSequenceParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableActionSequenceParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


