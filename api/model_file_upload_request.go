/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// FileUploadRequest struct for FileUploadRequest
type FileUploadRequest struct {
	File *string `json:"file,omitempty"`
}

// NewFileUploadRequest instantiates a new FileUploadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileUploadRequest() *FileUploadRequest {
	this := FileUploadRequest{}
	return &this
}

// NewFileUploadRequestWithDefaults instantiates a new FileUploadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileUploadRequestWithDefaults() *FileUploadRequest {
	this := FileUploadRequest{}
	return &this
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *FileUploadRequest) GetFile() string {
	if o == nil || o.File == nil {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileUploadRequest) GetFileOk() (*string, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *FileUploadRequest) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *FileUploadRequest) SetFile(v string) {
	o.File = &v
}

func (o FileUploadRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.File != nil {
		toSerialize["file"] = o.File
	}
	return json.Marshal(toSerialize)
}

type NilableFileUploadRequest struct {
	value *FileUploadRequest
	isSet bool
}

func (v NilableFileUploadRequest) Get() *FileUploadRequest {
	return v.value
}

func (v *NilableFileUploadRequest) Set(val *FileUploadRequest) {
	v.value = val
	v.isSet = true
}

func (v NilableFileUploadRequest) IsSet() bool {
	return v.isSet
}

func (v *NilableFileUploadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableFileUploadRequest(val *FileUploadRequest) *NilableFileUploadRequest {
	return &NilableFileUploadRequest{value: val, isSet: true}
}

func (v NilableFileUploadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableFileUploadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


