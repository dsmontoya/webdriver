/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ActionsRequest struct for ActionsRequest
type ActionsRequest struct {
	// A list of actions to be performed
	Actions []ActionSequence `json:"actions"`
}

// NewActionsRequest instantiates a new ActionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionsRequest(actions []ActionSequence) *ActionsRequest {
	this := ActionsRequest{}
	this.Actions = actions
	return &this
}

// NewActionsRequestWithDefaults instantiates a new ActionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionsRequestWithDefaults() *ActionsRequest {
	this := ActionsRequest{}
	return &this
}

// GetActions returns the Actions field value
func (o *ActionsRequest) GetActions() []ActionSequence {
	if o == nil {
		var ret []ActionSequence
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *ActionsRequest) GetActionsOk() ([]ActionSequence, bool) {
	if o == nil {
		return nil, false
	}
	return o.Actions, true
}

// SetActions sets field value
func (o *ActionsRequest) SetActions(v []ActionSequence) {
	o.Actions = v
}

func (o ActionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["actions"] = o.Actions
	}
	return json.Marshal(toSerialize)
}

type NilableActionsRequest struct {
	value *ActionsRequest
	isSet bool
}

func (v NilableActionsRequest) Get() *ActionsRequest {
	return v.value
}

func (v *NilableActionsRequest) Set(val *ActionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NilableActionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NilableActionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableActionsRequest(val *ActionsRequest) *NilableActionsRequest {
	return &NilableActionsRequest{value: val, isSet: true}
}

func (v NilableActionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableActionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


