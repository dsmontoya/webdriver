/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SelenoidOptions struct for SelenoidOptions
type SelenoidOptions struct {
	EnableLog *bool `json:"enableLog,omitempty"`
	EnableVideo *bool `json:"enableVideo,omitempty"`
	EnableVNC *bool `json:"enableVNC,omitempty"`
	Env []string `json:"env,omitempty"`
	// Custom container labels
	Labels *map[string]string `json:"labels,omitempty"`
	LogName *string `json:"logName,omitempty"`
	Name *string `json:"name,omitempty"`
	S3KeyPattern *string `json:"s3KeyPattern,omitempty"`
	SessionTimeout *string `json:"sessionTimeout,omitempty"`
	// Screen resolution in format 1920x1080x32 or 1920x1080
	ScreenResolution *string `json:"screenResolution,omitempty"`
	// Time zone value like Europe/Moscow
	TimeZone *string `json:"timeZone,omitempty"`
	VideoFrameRate *int64 `json:"videoFrameRate,omitempty"`
	VideoName *string `json:"videoName,omitempty"`
	// Video screen size in format 1920x1080
	VideoScreenSize *string `json:"videoScreenSize,omitempty"`
}

// NewSelenoidOptions instantiates a new SelenoidOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelenoidOptions() *SelenoidOptions {
	this := SelenoidOptions{}
	return &this
}

// NewSelenoidOptionsWithDefaults instantiates a new SelenoidOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelenoidOptionsWithDefaults() *SelenoidOptions {
	this := SelenoidOptions{}
	return &this
}

// GetEnableLog returns the EnableLog field value if set, zero value otherwise.
func (o *SelenoidOptions) GetEnableLog() bool {
	if o == nil || o.EnableLog == nil {
		var ret bool
		return ret
	}
	return *o.EnableLog
}

// GetEnableLogOk returns a tuple with the EnableLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetEnableLogOk() (*bool, bool) {
	if o == nil || o.EnableLog == nil {
		return nil, false
	}
	return o.EnableLog, true
}

// HasEnableLog returns a boolean if a field has been set.
func (o *SelenoidOptions) HasEnableLog() bool {
	if o != nil && o.EnableLog != nil {
		return true
	}

	return false
}

// SetEnableLog gets a reference to the given bool and assigns it to the EnableLog field.
func (o *SelenoidOptions) SetEnableLog(v bool) {
	o.EnableLog = &v
}

// GetEnableVideo returns the EnableVideo field value if set, zero value otherwise.
func (o *SelenoidOptions) GetEnableVideo() bool {
	if o == nil || o.EnableVideo == nil {
		var ret bool
		return ret
	}
	return *o.EnableVideo
}

// GetEnableVideoOk returns a tuple with the EnableVideo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetEnableVideoOk() (*bool, bool) {
	if o == nil || o.EnableVideo == nil {
		return nil, false
	}
	return o.EnableVideo, true
}

// HasEnableVideo returns a boolean if a field has been set.
func (o *SelenoidOptions) HasEnableVideo() bool {
	if o != nil && o.EnableVideo != nil {
		return true
	}

	return false
}

// SetEnableVideo gets a reference to the given bool and assigns it to the EnableVideo field.
func (o *SelenoidOptions) SetEnableVideo(v bool) {
	o.EnableVideo = &v
}

// GetEnableVNC returns the EnableVNC field value if set, zero value otherwise.
func (o *SelenoidOptions) GetEnableVNC() bool {
	if o == nil || o.EnableVNC == nil {
		var ret bool
		return ret
	}
	return *o.EnableVNC
}

// GetEnableVNCOk returns a tuple with the EnableVNC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetEnableVNCOk() (*bool, bool) {
	if o == nil || o.EnableVNC == nil {
		return nil, false
	}
	return o.EnableVNC, true
}

// HasEnableVNC returns a boolean if a field has been set.
func (o *SelenoidOptions) HasEnableVNC() bool {
	if o != nil && o.EnableVNC != nil {
		return true
	}

	return false
}

// SetEnableVNC gets a reference to the given bool and assigns it to the EnableVNC field.
func (o *SelenoidOptions) SetEnableVNC(v bool) {
	o.EnableVNC = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *SelenoidOptions) GetEnv() []string {
	if o == nil || o.Env == nil {
		var ret []string
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetEnvOk() ([]string, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *SelenoidOptions) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []string and assigns it to the Env field.
func (o *SelenoidOptions) SetEnv(v []string) {
	o.Env = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *SelenoidOptions) GetLabels() map[string]string {
	if o == nil || o.Labels == nil {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *SelenoidOptions) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *SelenoidOptions) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetLogName returns the LogName field value if set, zero value otherwise.
func (o *SelenoidOptions) GetLogName() string {
	if o == nil || o.LogName == nil {
		var ret string
		return ret
	}
	return *o.LogName
}

// GetLogNameOk returns a tuple with the LogName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetLogNameOk() (*string, bool) {
	if o == nil || o.LogName == nil {
		return nil, false
	}
	return o.LogName, true
}

// HasLogName returns a boolean if a field has been set.
func (o *SelenoidOptions) HasLogName() bool {
	if o != nil && o.LogName != nil {
		return true
	}

	return false
}

// SetLogName gets a reference to the given string and assigns it to the LogName field.
func (o *SelenoidOptions) SetLogName(v string) {
	o.LogName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SelenoidOptions) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SelenoidOptions) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SelenoidOptions) SetName(v string) {
	o.Name = &v
}

// GetS3KeyPattern returns the S3KeyPattern field value if set, zero value otherwise.
func (o *SelenoidOptions) GetS3KeyPattern() string {
	if o == nil || o.S3KeyPattern == nil {
		var ret string
		return ret
	}
	return *o.S3KeyPattern
}

// GetS3KeyPatternOk returns a tuple with the S3KeyPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetS3KeyPatternOk() (*string, bool) {
	if o == nil || o.S3KeyPattern == nil {
		return nil, false
	}
	return o.S3KeyPattern, true
}

// HasS3KeyPattern returns a boolean if a field has been set.
func (o *SelenoidOptions) HasS3KeyPattern() bool {
	if o != nil && o.S3KeyPattern != nil {
		return true
	}

	return false
}

// SetS3KeyPattern gets a reference to the given string and assigns it to the S3KeyPattern field.
func (o *SelenoidOptions) SetS3KeyPattern(v string) {
	o.S3KeyPattern = &v
}

// GetSessionTimeout returns the SessionTimeout field value if set, zero value otherwise.
func (o *SelenoidOptions) GetSessionTimeout() string {
	if o == nil || o.SessionTimeout == nil {
		var ret string
		return ret
	}
	return *o.SessionTimeout
}

// GetSessionTimeoutOk returns a tuple with the SessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetSessionTimeoutOk() (*string, bool) {
	if o == nil || o.SessionTimeout == nil {
		return nil, false
	}
	return o.SessionTimeout, true
}

// HasSessionTimeout returns a boolean if a field has been set.
func (o *SelenoidOptions) HasSessionTimeout() bool {
	if o != nil && o.SessionTimeout != nil {
		return true
	}

	return false
}

// SetSessionTimeout gets a reference to the given string and assigns it to the SessionTimeout field.
func (o *SelenoidOptions) SetSessionTimeout(v string) {
	o.SessionTimeout = &v
}

// GetScreenResolution returns the ScreenResolution field value if set, zero value otherwise.
func (o *SelenoidOptions) GetScreenResolution() string {
	if o == nil || o.ScreenResolution == nil {
		var ret string
		return ret
	}
	return *o.ScreenResolution
}

// GetScreenResolutionOk returns a tuple with the ScreenResolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetScreenResolutionOk() (*string, bool) {
	if o == nil || o.ScreenResolution == nil {
		return nil, false
	}
	return o.ScreenResolution, true
}

// HasScreenResolution returns a boolean if a field has been set.
func (o *SelenoidOptions) HasScreenResolution() bool {
	if o != nil && o.ScreenResolution != nil {
		return true
	}

	return false
}

// SetScreenResolution gets a reference to the given string and assigns it to the ScreenResolution field.
func (o *SelenoidOptions) SetScreenResolution(v string) {
	o.ScreenResolution = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *SelenoidOptions) GetTimeZone() string {
	if o == nil || o.TimeZone == nil {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetTimeZoneOk() (*string, bool) {
	if o == nil || o.TimeZone == nil {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *SelenoidOptions) HasTimeZone() bool {
	if o != nil && o.TimeZone != nil {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *SelenoidOptions) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetVideoFrameRate returns the VideoFrameRate field value if set, zero value otherwise.
func (o *SelenoidOptions) GetVideoFrameRate() int64 {
	if o == nil || o.VideoFrameRate == nil {
		var ret int64
		return ret
	}
	return *o.VideoFrameRate
}

// GetVideoFrameRateOk returns a tuple with the VideoFrameRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetVideoFrameRateOk() (*int64, bool) {
	if o == nil || o.VideoFrameRate == nil {
		return nil, false
	}
	return o.VideoFrameRate, true
}

// HasVideoFrameRate returns a boolean if a field has been set.
func (o *SelenoidOptions) HasVideoFrameRate() bool {
	if o != nil && o.VideoFrameRate != nil {
		return true
	}

	return false
}

// SetVideoFrameRate gets a reference to the given int64 and assigns it to the VideoFrameRate field.
func (o *SelenoidOptions) SetVideoFrameRate(v int64) {
	o.VideoFrameRate = &v
}

// GetVideoName returns the VideoName field value if set, zero value otherwise.
func (o *SelenoidOptions) GetVideoName() string {
	if o == nil || o.VideoName == nil {
		var ret string
		return ret
	}
	return *o.VideoName
}

// GetVideoNameOk returns a tuple with the VideoName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetVideoNameOk() (*string, bool) {
	if o == nil || o.VideoName == nil {
		return nil, false
	}
	return o.VideoName, true
}

// HasVideoName returns a boolean if a field has been set.
func (o *SelenoidOptions) HasVideoName() bool {
	if o != nil && o.VideoName != nil {
		return true
	}

	return false
}

// SetVideoName gets a reference to the given string and assigns it to the VideoName field.
func (o *SelenoidOptions) SetVideoName(v string) {
	o.VideoName = &v
}

// GetVideoScreenSize returns the VideoScreenSize field value if set, zero value otherwise.
func (o *SelenoidOptions) GetVideoScreenSize() string {
	if o == nil || o.VideoScreenSize == nil {
		var ret string
		return ret
	}
	return *o.VideoScreenSize
}

// GetVideoScreenSizeOk returns a tuple with the VideoScreenSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelenoidOptions) GetVideoScreenSizeOk() (*string, bool) {
	if o == nil || o.VideoScreenSize == nil {
		return nil, false
	}
	return o.VideoScreenSize, true
}

// HasVideoScreenSize returns a boolean if a field has been set.
func (o *SelenoidOptions) HasVideoScreenSize() bool {
	if o != nil && o.VideoScreenSize != nil {
		return true
	}

	return false
}

// SetVideoScreenSize gets a reference to the given string and assigns it to the VideoScreenSize field.
func (o *SelenoidOptions) SetVideoScreenSize(v string) {
	o.VideoScreenSize = &v
}

func (o SelenoidOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EnableLog != nil {
		toSerialize["enableLog"] = o.EnableLog
	}
	if o.EnableVideo != nil {
		toSerialize["enableVideo"] = o.EnableVideo
	}
	if o.EnableVNC != nil {
		toSerialize["enableVNC"] = o.EnableVNC
	}
	if o.Env != nil {
		toSerialize["env"] = o.Env
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.LogName != nil {
		toSerialize["logName"] = o.LogName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.S3KeyPattern != nil {
		toSerialize["s3KeyPattern"] = o.S3KeyPattern
	}
	if o.SessionTimeout != nil {
		toSerialize["sessionTimeout"] = o.SessionTimeout
	}
	if o.ScreenResolution != nil {
		toSerialize["screenResolution"] = o.ScreenResolution
	}
	if o.TimeZone != nil {
		toSerialize["timeZone"] = o.TimeZone
	}
	if o.VideoFrameRate != nil {
		toSerialize["videoFrameRate"] = o.VideoFrameRate
	}
	if o.VideoName != nil {
		toSerialize["videoName"] = o.VideoName
	}
	if o.VideoScreenSize != nil {
		toSerialize["videoScreenSize"] = o.VideoScreenSize
	}
	return json.Marshal(toSerialize)
}

type NilableSelenoidOptions struct {
	value *SelenoidOptions
	isSet bool
}

func (v NilableSelenoidOptions) Get() *SelenoidOptions {
	return v.value
}

func (v *NilableSelenoidOptions) Set(val *SelenoidOptions) {
	v.value = val
	v.isSet = true
}

func (v NilableSelenoidOptions) IsSet() bool {
	return v.isSet
}

func (v *NilableSelenoidOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableSelenoidOptions(val *SelenoidOptions) *NilableSelenoidOptions {
	return &NilableSelenoidOptions{value: val, isSet: true}
}

func (v NilableSelenoidOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableSelenoidOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


