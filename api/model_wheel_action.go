/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// WheelAction struct for WheelAction
type WheelAction struct {
	Type *string `json:"type,omitempty"`
	X *int32 `json:"x,omitempty"`
	Y *int32 `json:"y,omitempty"`
	DeltaX *int32 `json:"deltaX,omitempty"`
	DeltaY *int32 `json:"deltaY,omitempty"`
	Origin *ActionOrigin `json:"origin,omitempty"`
}

// NewWheelAction instantiates a new WheelAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWheelAction() *WheelAction {
	this := WheelAction{}
	var type_ string = "pause"
	this.Type = &type_
	return &this
}

// NewWheelActionWithDefaults instantiates a new WheelAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWheelActionWithDefaults() *WheelAction {
	this := WheelAction{}
	var type_ string = "pause"
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WheelAction) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WheelAction) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WheelAction) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WheelAction) SetType(v string) {
	o.Type = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *WheelAction) GetX() int32 {
	if o == nil || o.X == nil {
		var ret int32
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WheelAction) GetXOk() (*int32, bool) {
	if o == nil || o.X == nil {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *WheelAction) HasX() bool {
	if o != nil && o.X != nil {
		return true
	}

	return false
}

// SetX gets a reference to the given int32 and assigns it to the X field.
func (o *WheelAction) SetX(v int32) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *WheelAction) GetY() int32 {
	if o == nil || o.Y == nil {
		var ret int32
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WheelAction) GetYOk() (*int32, bool) {
	if o == nil || o.Y == nil {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *WheelAction) HasY() bool {
	if o != nil && o.Y != nil {
		return true
	}

	return false
}

// SetY gets a reference to the given int32 and assigns it to the Y field.
func (o *WheelAction) SetY(v int32) {
	o.Y = &v
}

// GetDeltaX returns the DeltaX field value if set, zero value otherwise.
func (o *WheelAction) GetDeltaX() int32 {
	if o == nil || o.DeltaX == nil {
		var ret int32
		return ret
	}
	return *o.DeltaX
}

// GetDeltaXOk returns a tuple with the DeltaX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WheelAction) GetDeltaXOk() (*int32, bool) {
	if o == nil || o.DeltaX == nil {
		return nil, false
	}
	return o.DeltaX, true
}

// HasDeltaX returns a boolean if a field has been set.
func (o *WheelAction) HasDeltaX() bool {
	if o != nil && o.DeltaX != nil {
		return true
	}

	return false
}

// SetDeltaX gets a reference to the given int32 and assigns it to the DeltaX field.
func (o *WheelAction) SetDeltaX(v int32) {
	o.DeltaX = &v
}

// GetDeltaY returns the DeltaY field value if set, zero value otherwise.
func (o *WheelAction) GetDeltaY() int32 {
	if o == nil || o.DeltaY == nil {
		var ret int32
		return ret
	}
	return *o.DeltaY
}

// GetDeltaYOk returns a tuple with the DeltaY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WheelAction) GetDeltaYOk() (*int32, bool) {
	if o == nil || o.DeltaY == nil {
		return nil, false
	}
	return o.DeltaY, true
}

// HasDeltaY returns a boolean if a field has been set.
func (o *WheelAction) HasDeltaY() bool {
	if o != nil && o.DeltaY != nil {
		return true
	}

	return false
}

// SetDeltaY gets a reference to the given int32 and assigns it to the DeltaY field.
func (o *WheelAction) SetDeltaY(v int32) {
	o.DeltaY = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *WheelAction) GetOrigin() ActionOrigin {
	if o == nil || o.Origin == nil {
		var ret ActionOrigin
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WheelAction) GetOriginOk() (*ActionOrigin, bool) {
	if o == nil || o.Origin == nil {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *WheelAction) HasOrigin() bool {
	if o != nil && o.Origin != nil {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given ActionOrigin and assigns it to the Origin field.
func (o *WheelAction) SetOrigin(v ActionOrigin) {
	o.Origin = &v
}

func (o WheelAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.X != nil {
		toSerialize["x"] = o.X
	}
	if o.Y != nil {
		toSerialize["y"] = o.Y
	}
	if o.DeltaX != nil {
		toSerialize["deltaX"] = o.DeltaX
	}
	if o.DeltaY != nil {
		toSerialize["deltaY"] = o.DeltaY
	}
	if o.Origin != nil {
		toSerialize["origin"] = o.Origin
	}
	return json.Marshal(toSerialize)
}

type NilableWheelAction struct {
	value *WheelAction
	isSet bool
}

func (v NilableWheelAction) Get() *WheelAction {
	return v.value
}

func (v *NilableWheelAction) Set(val *WheelAction) {
	v.value = val
	v.isSet = true
}

func (v NilableWheelAction) IsSet() bool {
	return v.isSet
}

func (v *NilableWheelAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableWheelAction(val *WheelAction) *NilableWheelAction {
	return &NilableWheelAction{value: val, isSet: true}
}

func (v NilableWheelAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableWheelAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


