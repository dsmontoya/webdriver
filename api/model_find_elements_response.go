/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// FindElementsResponse struct for FindElementsResponse
type FindElementsResponse struct {
	// A list of web element identifiers
	Value []FindElementResponseValue `json:"value"`
}

// NewFindElementsResponse instantiates a new FindElementsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindElementsResponse(value []FindElementResponseValue) *FindElementsResponse {
	this := FindElementsResponse{}
	this.Value = value
	return &this
}

// NewFindElementsResponseWithDefaults instantiates a new FindElementsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindElementsResponseWithDefaults() *FindElementsResponse {
	this := FindElementsResponse{}
	return &this
}

// GetValue returns the Value field value
func (o *FindElementsResponse) GetValue() []FindElementResponseValue {
	if o == nil {
		var ret []FindElementResponseValue
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FindElementsResponse) GetValueOk() ([]FindElementResponseValue, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value, true
}

// SetValue sets field value
func (o *FindElementsResponse) SetValue(v []FindElementResponseValue) {
	o.Value = v
}

func (o FindElementsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NilableFindElementsResponse struct {
	value *FindElementsResponse
	isSet bool
}

func (v NilableFindElementsResponse) Get() *FindElementsResponse {
	return v.value
}

func (v *NilableFindElementsResponse) Set(val *FindElementsResponse) {
	v.value = val
	v.isSet = true
}

func (v NilableFindElementsResponse) IsSet() bool {
	return v.isSet
}

func (v *NilableFindElementsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableFindElementsResponse(val *FindElementsResponse) *NilableFindElementsResponse {
	return &NilableFindElementsResponse{value: val, isSet: true}
}

func (v NilableFindElementsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableFindElementsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


