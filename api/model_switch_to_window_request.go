/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SwitchToWindowRequest struct for SwitchToWindowRequest
type SwitchToWindowRequest struct {
	Handle string `json:"handle"`
}

// NewSwitchToWindowRequest instantiates a new SwitchToWindowRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSwitchToWindowRequest(handle string) *SwitchToWindowRequest {
	this := SwitchToWindowRequest{}
	this.Handle = handle
	return &this
}

// NewSwitchToWindowRequestWithDefaults instantiates a new SwitchToWindowRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSwitchToWindowRequestWithDefaults() *SwitchToWindowRequest {
	this := SwitchToWindowRequest{}
	return &this
}

// GetHandle returns the Handle field value
func (o *SwitchToWindowRequest) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *SwitchToWindowRequest) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *SwitchToWindowRequest) SetHandle(v string) {
	o.Handle = v
}

func (o SwitchToWindowRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["handle"] = o.Handle
	}
	return json.Marshal(toSerialize)
}

type NilableSwitchToWindowRequest struct {
	value *SwitchToWindowRequest
	isSet bool
}

func (v NilableSwitchToWindowRequest) Get() *SwitchToWindowRequest {
	return v.value
}

func (v *NilableSwitchToWindowRequest) Set(val *SwitchToWindowRequest) {
	v.value = val
	v.isSet = true
}

func (v NilableSwitchToWindowRequest) IsSet() bool {
	return v.isSet
}

func (v *NilableSwitchToWindowRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableSwitchToWindowRequest(val *SwitchToWindowRequest) *NilableSwitchToWindowRequest {
	return &NilableSwitchToWindowRequest{value: val, isSet: true}
}

func (v NilableSwitchToWindowRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableSwitchToWindowRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


