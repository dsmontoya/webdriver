/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CookiesResponse struct for CookiesResponse
type CookiesResponse struct {
	Value []Cookie `json:"value"`
}

// NewCookiesResponse instantiates a new CookiesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCookiesResponse(value []Cookie) *CookiesResponse {
	this := CookiesResponse{}
	this.Value = value
	return &this
}

// NewCookiesResponseWithDefaults instantiates a new CookiesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCookiesResponseWithDefaults() *CookiesResponse {
	this := CookiesResponse{}
	return &this
}

// GetValue returns the Value field value
func (o *CookiesResponse) GetValue() []Cookie {
	if o == nil {
		var ret []Cookie
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CookiesResponse) GetValueOk() ([]Cookie, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value, true
}

// SetValue sets field value
func (o *CookiesResponse) SetValue(v []Cookie) {
	o.Value = v
}

func (o CookiesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NilableCookiesResponse struct {
	value *CookiesResponse
	isSet bool
}

func (v NilableCookiesResponse) Get() *CookiesResponse {
	return v.value
}

func (v *NilableCookiesResponse) Set(val *CookiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NilableCookiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NilableCookiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableCookiesResponse(val *CookiesResponse) *NilableCookiesResponse {
	return &NilableCookiesResponse{value: val, isSet: true}
}

func (v NilableCookiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableCookiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


