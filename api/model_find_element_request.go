/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// FindElementRequest struct for FindElementRequest
type FindElementRequest struct {
	Using LocatorStrategy `json:"using"`
	// Selector value
	Value string `json:"value"`
}

// NewFindElementRequest instantiates a new FindElementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindElementRequest(using LocatorStrategy, value string) *FindElementRequest {
	this := FindElementRequest{}
	this.Using = using
	this.Value = value
	return &this
}

// NewFindElementRequestWithDefaults instantiates a new FindElementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindElementRequestWithDefaults() *FindElementRequest {
	this := FindElementRequest{}
	return &this
}

// GetUsing returns the Using field value
func (o *FindElementRequest) GetUsing() LocatorStrategy {
	if o == nil {
		var ret LocatorStrategy
		return ret
	}

	return o.Using
}

// GetUsingOk returns a tuple with the Using field value
// and a boolean to check if the value has been set.
func (o *FindElementRequest) GetUsingOk() (*LocatorStrategy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Using, true
}

// SetUsing sets field value
func (o *FindElementRequest) SetUsing(v LocatorStrategy) {
	o.Using = v
}

// GetValue returns the Value field value
func (o *FindElementRequest) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FindElementRequest) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FindElementRequest) SetValue(v string) {
	o.Value = v
}

func (o FindElementRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["using"] = o.Using
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NilableFindElementRequest struct {
	value *FindElementRequest
	isSet bool
}

func (v NilableFindElementRequest) Get() *FindElementRequest {
	return v.value
}

func (v *NilableFindElementRequest) Set(val *FindElementRequest) {
	v.value = val
	v.isSet = true
}

func (v NilableFindElementRequest) IsSet() bool {
	return v.isSet
}

func (v *NilableFindElementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableFindElementRequest(val *FindElementRequest) *NilableFindElementRequest {
	return &NilableFindElementRequest{value: val, isSet: true}
}

func (v NilableFindElementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableFindElementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


