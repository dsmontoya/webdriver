/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CookieRequest struct for CookieRequest
type CookieRequest struct {
	Cookie Cookie `json:"cookie"`
}

// NewCookieRequest instantiates a new CookieRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCookieRequest(cookie Cookie) *CookieRequest {
	this := CookieRequest{}
	this.Cookie = cookie
	return &this
}

// NewCookieRequestWithDefaults instantiates a new CookieRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCookieRequestWithDefaults() *CookieRequest {
	this := CookieRequest{}
	return &this
}

// GetCookie returns the Cookie field value
func (o *CookieRequest) GetCookie() Cookie {
	if o == nil {
		var ret Cookie
		return ret
	}

	return o.Cookie
}

// GetCookieOk returns a tuple with the Cookie field value
// and a boolean to check if the value has been set.
func (o *CookieRequest) GetCookieOk() (*Cookie, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cookie, true
}

// SetCookie sets field value
func (o *CookieRequest) SetCookie(v Cookie) {
	o.Cookie = v
}

func (o CookieRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cookie"] = o.Cookie
	}
	return json.Marshal(toSerialize)
}

type NilableCookieRequest struct {
	value *CookieRequest
	isSet bool
}

func (v NilableCookieRequest) Get() *CookieRequest {
	return v.value
}

func (v *NilableCookieRequest) Set(val *CookieRequest) {
	v.value = val
	v.isSet = true
}

func (v NilableCookieRequest) IsSet() bool {
	return v.isSet
}

func (v *NilableCookieRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableCookieRequest(val *CookieRequest) *NilableCookieRequest {
	return &NilableCookieRequest{value: val, isSet: true}
}

func (v NilableCookieRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableCookieRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


