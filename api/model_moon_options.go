/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// MoonOptions struct for MoonOptions
type MoonOptions struct {
	// Enable additional regional fonts (Chinese, Japanese, Thai and so on)
	AdditionalFonts *bool `json:"additionalFonts,omitempty"`
	// Moon context archive URL
	Context *string `json:"context,omitempty"`
	EnableVideo *bool `json:"enableVideo,omitempty"`
	Env []string `json:"env,omitempty"`
	// Additional /etc/hosts entries
	Hosts []string `json:"hosts,omitempty"`
	// Custom pod labels
	Labels *map[string]string `json:"labels,omitempty"`
	LogLevel *MoonLogLevel `json:"logLevel,omitempty"`
	MobileDevice *MoonMobileDevice `json:"mobileDevice,omitempty"`
	Name *string `json:"name,omitempty"`
	// Custom DNS servers
	Nameservers []string `json:"nameservers,omitempty"`
	// S3 upload pattern
	Pattern *string `json:"pattern,omitempty"`
	SessionTimeout *string `json:"sessionTimeout,omitempty"`
	// Screen resolution in format 1920x1080x32 or 1920x1080
	ScreenResolution *string `json:"screenResolution,omitempty"`
	VideoFrameRate *int64 `json:"videoFrameRate,omitempty"`
	VideoName *string `json:"videoName,omitempty"`
	// Video screen size in format 1920x1080
	VideoScreenSize *string `json:"videoScreenSize,omitempty"`
}

// NewMoonOptions instantiates a new MoonOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoonOptions() *MoonOptions {
	this := MoonOptions{}
	return &this
}

// NewMoonOptionsWithDefaults instantiates a new MoonOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoonOptionsWithDefaults() *MoonOptions {
	this := MoonOptions{}
	return &this
}

// GetAdditionalFonts returns the AdditionalFonts field value if set, zero value otherwise.
func (o *MoonOptions) GetAdditionalFonts() bool {
	if o == nil || o.AdditionalFonts == nil {
		var ret bool
		return ret
	}
	return *o.AdditionalFonts
}

// GetAdditionalFontsOk returns a tuple with the AdditionalFonts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetAdditionalFontsOk() (*bool, bool) {
	if o == nil || o.AdditionalFonts == nil {
		return nil, false
	}
	return o.AdditionalFonts, true
}

// HasAdditionalFonts returns a boolean if a field has been set.
func (o *MoonOptions) HasAdditionalFonts() bool {
	if o != nil && o.AdditionalFonts != nil {
		return true
	}

	return false
}

// SetAdditionalFonts gets a reference to the given bool and assigns it to the AdditionalFonts field.
func (o *MoonOptions) SetAdditionalFonts(v bool) {
	o.AdditionalFonts = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *MoonOptions) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *MoonOptions) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *MoonOptions) SetContext(v string) {
	o.Context = &v
}

// GetEnableVideo returns the EnableVideo field value if set, zero value otherwise.
func (o *MoonOptions) GetEnableVideo() bool {
	if o == nil || o.EnableVideo == nil {
		var ret bool
		return ret
	}
	return *o.EnableVideo
}

// GetEnableVideoOk returns a tuple with the EnableVideo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetEnableVideoOk() (*bool, bool) {
	if o == nil || o.EnableVideo == nil {
		return nil, false
	}
	return o.EnableVideo, true
}

// HasEnableVideo returns a boolean if a field has been set.
func (o *MoonOptions) HasEnableVideo() bool {
	if o != nil && o.EnableVideo != nil {
		return true
	}

	return false
}

// SetEnableVideo gets a reference to the given bool and assigns it to the EnableVideo field.
func (o *MoonOptions) SetEnableVideo(v bool) {
	o.EnableVideo = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *MoonOptions) GetEnv() []string {
	if o == nil || o.Env == nil {
		var ret []string
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetEnvOk() ([]string, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *MoonOptions) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []string and assigns it to the Env field.
func (o *MoonOptions) SetEnv(v []string) {
	o.Env = v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *MoonOptions) GetHosts() []string {
	if o == nil || o.Hosts == nil {
		var ret []string
		return ret
	}
	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetHostsOk() ([]string, bool) {
	if o == nil || o.Hosts == nil {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *MoonOptions) HasHosts() bool {
	if o != nil && o.Hosts != nil {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []string and assigns it to the Hosts field.
func (o *MoonOptions) SetHosts(v []string) {
	o.Hosts = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *MoonOptions) GetLabels() map[string]string {
	if o == nil || o.Labels == nil {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *MoonOptions) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *MoonOptions) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetLogLevel returns the LogLevel field value if set, zero value otherwise.
func (o *MoonOptions) GetLogLevel() MoonLogLevel {
	if o == nil || o.LogLevel == nil {
		var ret MoonLogLevel
		return ret
	}
	return *o.LogLevel
}

// GetLogLevelOk returns a tuple with the LogLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetLogLevelOk() (*MoonLogLevel, bool) {
	if o == nil || o.LogLevel == nil {
		return nil, false
	}
	return o.LogLevel, true
}

// HasLogLevel returns a boolean if a field has been set.
func (o *MoonOptions) HasLogLevel() bool {
	if o != nil && o.LogLevel != nil {
		return true
	}

	return false
}

// SetLogLevel gets a reference to the given MoonLogLevel and assigns it to the LogLevel field.
func (o *MoonOptions) SetLogLevel(v MoonLogLevel) {
	o.LogLevel = &v
}

// GetMobileDevice returns the MobileDevice field value if set, zero value otherwise.
func (o *MoonOptions) GetMobileDevice() MoonMobileDevice {
	if o == nil || o.MobileDevice == nil {
		var ret MoonMobileDevice
		return ret
	}
	return *o.MobileDevice
}

// GetMobileDeviceOk returns a tuple with the MobileDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetMobileDeviceOk() (*MoonMobileDevice, bool) {
	if o == nil || o.MobileDevice == nil {
		return nil, false
	}
	return o.MobileDevice, true
}

// HasMobileDevice returns a boolean if a field has been set.
func (o *MoonOptions) HasMobileDevice() bool {
	if o != nil && o.MobileDevice != nil {
		return true
	}

	return false
}

// SetMobileDevice gets a reference to the given MoonMobileDevice and assigns it to the MobileDevice field.
func (o *MoonOptions) SetMobileDevice(v MoonMobileDevice) {
	o.MobileDevice = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MoonOptions) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MoonOptions) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MoonOptions) SetName(v string) {
	o.Name = &v
}

// GetNameservers returns the Nameservers field value if set, zero value otherwise.
func (o *MoonOptions) GetNameservers() []string {
	if o == nil || o.Nameservers == nil {
		var ret []string
		return ret
	}
	return o.Nameservers
}

// GetNameserversOk returns a tuple with the Nameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetNameserversOk() ([]string, bool) {
	if o == nil || o.Nameservers == nil {
		return nil, false
	}
	return o.Nameservers, true
}

// HasNameservers returns a boolean if a field has been set.
func (o *MoonOptions) HasNameservers() bool {
	if o != nil && o.Nameservers != nil {
		return true
	}

	return false
}

// SetNameservers gets a reference to the given []string and assigns it to the Nameservers field.
func (o *MoonOptions) SetNameservers(v []string) {
	o.Nameservers = v
}

// GetPattern returns the Pattern field value if set, zero value otherwise.
func (o *MoonOptions) GetPattern() string {
	if o == nil || o.Pattern == nil {
		var ret string
		return ret
	}
	return *o.Pattern
}

// GetPatternOk returns a tuple with the Pattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetPatternOk() (*string, bool) {
	if o == nil || o.Pattern == nil {
		return nil, false
	}
	return o.Pattern, true
}

// HasPattern returns a boolean if a field has been set.
func (o *MoonOptions) HasPattern() bool {
	if o != nil && o.Pattern != nil {
		return true
	}

	return false
}

// SetPattern gets a reference to the given string and assigns it to the Pattern field.
func (o *MoonOptions) SetPattern(v string) {
	o.Pattern = &v
}

// GetSessionTimeout returns the SessionTimeout field value if set, zero value otherwise.
func (o *MoonOptions) GetSessionTimeout() string {
	if o == nil || o.SessionTimeout == nil {
		var ret string
		return ret
	}
	return *o.SessionTimeout
}

// GetSessionTimeoutOk returns a tuple with the SessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetSessionTimeoutOk() (*string, bool) {
	if o == nil || o.SessionTimeout == nil {
		return nil, false
	}
	return o.SessionTimeout, true
}

// HasSessionTimeout returns a boolean if a field has been set.
func (o *MoonOptions) HasSessionTimeout() bool {
	if o != nil && o.SessionTimeout != nil {
		return true
	}

	return false
}

// SetSessionTimeout gets a reference to the given string and assigns it to the SessionTimeout field.
func (o *MoonOptions) SetSessionTimeout(v string) {
	o.SessionTimeout = &v
}

// GetScreenResolution returns the ScreenResolution field value if set, zero value otherwise.
func (o *MoonOptions) GetScreenResolution() string {
	if o == nil || o.ScreenResolution == nil {
		var ret string
		return ret
	}
	return *o.ScreenResolution
}

// GetScreenResolutionOk returns a tuple with the ScreenResolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetScreenResolutionOk() (*string, bool) {
	if o == nil || o.ScreenResolution == nil {
		return nil, false
	}
	return o.ScreenResolution, true
}

// HasScreenResolution returns a boolean if a field has been set.
func (o *MoonOptions) HasScreenResolution() bool {
	if o != nil && o.ScreenResolution != nil {
		return true
	}

	return false
}

// SetScreenResolution gets a reference to the given string and assigns it to the ScreenResolution field.
func (o *MoonOptions) SetScreenResolution(v string) {
	o.ScreenResolution = &v
}

// GetVideoFrameRate returns the VideoFrameRate field value if set, zero value otherwise.
func (o *MoonOptions) GetVideoFrameRate() int64 {
	if o == nil || o.VideoFrameRate == nil {
		var ret int64
		return ret
	}
	return *o.VideoFrameRate
}

// GetVideoFrameRateOk returns a tuple with the VideoFrameRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetVideoFrameRateOk() (*int64, bool) {
	if o == nil || o.VideoFrameRate == nil {
		return nil, false
	}
	return o.VideoFrameRate, true
}

// HasVideoFrameRate returns a boolean if a field has been set.
func (o *MoonOptions) HasVideoFrameRate() bool {
	if o != nil && o.VideoFrameRate != nil {
		return true
	}

	return false
}

// SetVideoFrameRate gets a reference to the given int64 and assigns it to the VideoFrameRate field.
func (o *MoonOptions) SetVideoFrameRate(v int64) {
	o.VideoFrameRate = &v
}

// GetVideoName returns the VideoName field value if set, zero value otherwise.
func (o *MoonOptions) GetVideoName() string {
	if o == nil || o.VideoName == nil {
		var ret string
		return ret
	}
	return *o.VideoName
}

// GetVideoNameOk returns a tuple with the VideoName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetVideoNameOk() (*string, bool) {
	if o == nil || o.VideoName == nil {
		return nil, false
	}
	return o.VideoName, true
}

// HasVideoName returns a boolean if a field has been set.
func (o *MoonOptions) HasVideoName() bool {
	if o != nil && o.VideoName != nil {
		return true
	}

	return false
}

// SetVideoName gets a reference to the given string and assigns it to the VideoName field.
func (o *MoonOptions) SetVideoName(v string) {
	o.VideoName = &v
}

// GetVideoScreenSize returns the VideoScreenSize field value if set, zero value otherwise.
func (o *MoonOptions) GetVideoScreenSize() string {
	if o == nil || o.VideoScreenSize == nil {
		var ret string
		return ret
	}
	return *o.VideoScreenSize
}

// GetVideoScreenSizeOk returns a tuple with the VideoScreenSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoonOptions) GetVideoScreenSizeOk() (*string, bool) {
	if o == nil || o.VideoScreenSize == nil {
		return nil, false
	}
	return o.VideoScreenSize, true
}

// HasVideoScreenSize returns a boolean if a field has been set.
func (o *MoonOptions) HasVideoScreenSize() bool {
	if o != nil && o.VideoScreenSize != nil {
		return true
	}

	return false
}

// SetVideoScreenSize gets a reference to the given string and assigns it to the VideoScreenSize field.
func (o *MoonOptions) SetVideoScreenSize(v string) {
	o.VideoScreenSize = &v
}

func (o MoonOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalFonts != nil {
		toSerialize["additionalFonts"] = o.AdditionalFonts
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.EnableVideo != nil {
		toSerialize["enableVideo"] = o.EnableVideo
	}
	if o.Env != nil {
		toSerialize["env"] = o.Env
	}
	if o.Hosts != nil {
		toSerialize["hosts"] = o.Hosts
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.LogLevel != nil {
		toSerialize["logLevel"] = o.LogLevel
	}
	if o.MobileDevice != nil {
		toSerialize["mobileDevice"] = o.MobileDevice
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Nameservers != nil {
		toSerialize["nameservers"] = o.Nameservers
	}
	if o.Pattern != nil {
		toSerialize["pattern"] = o.Pattern
	}
	if o.SessionTimeout != nil {
		toSerialize["sessionTimeout"] = o.SessionTimeout
	}
	if o.ScreenResolution != nil {
		toSerialize["screenResolution"] = o.ScreenResolution
	}
	if o.VideoFrameRate != nil {
		toSerialize["videoFrameRate"] = o.VideoFrameRate
	}
	if o.VideoName != nil {
		toSerialize["videoName"] = o.VideoName
	}
	if o.VideoScreenSize != nil {
		toSerialize["videoScreenSize"] = o.VideoScreenSize
	}
	return json.Marshal(toSerialize)
}

type NilableMoonOptions struct {
	value *MoonOptions
	isSet bool
}

func (v NilableMoonOptions) Get() *MoonOptions {
	return v.value
}

func (v *NilableMoonOptions) Set(val *MoonOptions) {
	v.value = val
	v.isSet = true
}

func (v NilableMoonOptions) IsSet() bool {
	return v.isSet
}

func (v *NilableMoonOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableMoonOptions(val *MoonOptions) *NilableMoonOptions {
	return &NilableMoonOptions{value: val, isSet: true}
}

func (v NilableMoonOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableMoonOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


