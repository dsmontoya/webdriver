/*
Selenium WebDriver

[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification

API version: 1.0.0
Contact: support@aerokube.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AddonInstallRequest struct for AddonInstallRequest
type AddonInstallRequest struct {
	Addon string `json:"addon"`
	// temporarily installed extension will be removed at the end of browser session
	Temporary *bool `json:"temporary,omitempty"`
}

// NewAddonInstallRequest instantiates a new AddonInstallRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonInstallRequest(addon string) *AddonInstallRequest {
	this := AddonInstallRequest{}
	this.Addon = addon
	var temporary bool = true
	this.Temporary = &temporary
	return &this
}

// NewAddonInstallRequestWithDefaults instantiates a new AddonInstallRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonInstallRequestWithDefaults() *AddonInstallRequest {
	this := AddonInstallRequest{}
	var temporary bool = true
	this.Temporary = &temporary
	return &this
}

// GetAddon returns the Addon field value
func (o *AddonInstallRequest) GetAddon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Addon
}

// GetAddonOk returns a tuple with the Addon field value
// and a boolean to check if the value has been set.
func (o *AddonInstallRequest) GetAddonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Addon, true
}

// SetAddon sets field value
func (o *AddonInstallRequest) SetAddon(v string) {
	o.Addon = v
}

// GetTemporary returns the Temporary field value if set, zero value otherwise.
func (o *AddonInstallRequest) GetTemporary() bool {
	if o == nil || o.Temporary == nil {
		var ret bool
		return ret
	}
	return *o.Temporary
}

// GetTemporaryOk returns a tuple with the Temporary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonInstallRequest) GetTemporaryOk() (*bool, bool) {
	if o == nil || o.Temporary == nil {
		return nil, false
	}
	return o.Temporary, true
}

// HasTemporary returns a boolean if a field has been set.
func (o *AddonInstallRequest) HasTemporary() bool {
	if o != nil && o.Temporary != nil {
		return true
	}

	return false
}

// SetTemporary gets a reference to the given bool and assigns it to the Temporary field.
func (o *AddonInstallRequest) SetTemporary(v bool) {
	o.Temporary = &v
}

func (o AddonInstallRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["addon"] = o.Addon
	}
	if o.Temporary != nil {
		toSerialize["temporary"] = o.Temporary
	}
	return json.Marshal(toSerialize)
}

type NilableAddonInstallRequest struct {
	value *AddonInstallRequest
	isSet bool
}

func (v NilableAddonInstallRequest) Get() *AddonInstallRequest {
	return v.value
}

func (v *NilableAddonInstallRequest) Set(val *AddonInstallRequest) {
	v.value = val
	v.isSet = true
}

func (v NilableAddonInstallRequest) IsSet() bool {
	return v.isSet
}

func (v *NilableAddonInstallRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNilableAddonInstallRequest(val *AddonInstallRequest) *NilableAddonInstallRequest {
	return &NilableAddonInstallRequest{value: val, isSet: true}
}

func (v NilableAddonInstallRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NilableAddonInstallRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


